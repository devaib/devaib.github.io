<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Sidey</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2020-10-19T15:08:10-04:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Animation</title>
   <link href="http://localhost:4000/swiftui/animation"/>
   <updated>2020-10-17T00:00:00-04:00</updated>
   <id>http://localhost:4000/swiftui/Animation</id>
   <content type="html">&lt;h2 id=&quot;radial-button&quot;&gt;Radial Button&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;struct ContentView: View {
    @State private var animationAmount: CGFloat = 1
    
    var body: some View{
        Button(&quot;Tap Me&quot;) {
            self.animationAmount += 1
        }
        .padding(50)
        .background(Color.red)
        .foregroundColor(.white)
        .clipShape(Circle())
        .overlay(
            Circle()
                .stroke(Color.red)
                .scaleEffect(animationAmount)
                .opacity(Double(2 - animationAmount))
                .animation(
                    Animation.easeOut(duration: 1)
                        .repeatForever(autoreverses: false)
                )
        )
        .onAppear {
            self.animationAmount = 2
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;animation-binding&quot;&gt;Animation Binding&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;struct ContentView: View {
    @State private var animationAmount: CGFloat = 1
    
    var body: some View {
        VStack {
            Stepper(&quot;Scale amount&quot;, value: $animationAmount.animation(), in: 1...10)
            Spacer()
            Button(&quot;Tap Me&quot;) {
                self.animationAmount += 1
            }
            .padding(40)
            .background(Color.red)
            .foregroundColor(.white)
            .clipShape(Circle())
            .scaleEffect(animationAmount)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 

</feed>
