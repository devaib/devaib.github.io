{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sidey",
    "home_page_url": "http://localhost:4000/",
    "feed_url": "http://localhost:4000/feed.json",
    "description": "Simple and minimalistic jekyll blogging theme.",
    "icon": "http://localhost:4000/apple-touch-icon.png",
    "favicon": "http://localhost:4000/favicon.ico",
    "expired": false,
    
    "author": "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>nil}",
    
"items": [
    
        {
            "id": "http://localhost:4000/swiftui/animation",
            "title": "Animation",
            "summary": "Learning SwiftUI with hackingwithswift.",
            "content_text": "Radial Buttonstruct ContentView: View {    @State private var animationAmount: CGFloat = 1        var body: some View{        Button(\"Tap Me\") {            self.animationAmount += 1        }        .padding(50)        .background(Color.red)        .foregroundColor(.white)        .clipShape(Circle())        .overlay(            Circle()                .stroke(Color.red)                .scaleEffect(animationAmount)                .opacity(Double(2 - animationAmount))                .animation(                    Animation.easeOut(duration: 1)                        .repeatForever(autoreverses: false)                )        )        .onAppear {            self.animationAmount = 2        }    }}Animation Bindingstruct ContentView: View {    @State private var animationAmount: CGFloat = 1        var body: some View {        VStack {            Stepper(\"Scale amount\", value: $animationAmount.animation(), in: 1...10)            Spacer()            Button(\"Tap Me\") {                self.animationAmount += 1            }            .padding(40)            .background(Color.red)            .foregroundColor(.white)            .clipShape(Circle())            .scaleEffect(animationAmount)        }    }}",
            "content_html": "<h2 id=\"radial-button\">Radial Button</h2><pre><code class=\"language-swift\">struct ContentView: View {    @State private var animationAmount: CGFloat = 1        var body: some View{        Button(\"Tap Me\") {            self.animationAmount += 1        }        .padding(50)        .background(Color.red)        .foregroundColor(.white)        .clipShape(Circle())        .overlay(            Circle()                .stroke(Color.red)                .scaleEffect(animationAmount)                .opacity(Double(2 - animationAmount))                .animation(                    Animation.easeOut(duration: 1)                        .repeatForever(autoreverses: false)                )        )        .onAppear {            self.animationAmount = 2        }    }}</code></pre><h2 id=\"animation-binding\">Animation Binding</h2><pre><code class=\"language-swift\">struct ContentView: View {    @State private var animationAmount: CGFloat = 1        var body: some View {        VStack {            Stepper(\"Scale amount\", value: $animationAmount.animation(), in: 1...10)            Spacer()            Button(\"Tap Me\") {                self.animationAmount += 1            }            .padding(40)            .background(Color.red)            .foregroundColor(.white)            .clipShape(Circle())            .scaleEffect(animationAmount)        }    }}</code></pre>",
            "url": "http://localhost:4000/swiftui/animation",
            
            
            
            "tags": ["swiftui","hackingwithswift"],
            
            "date_published": "2020-10-17T00:00:00-04:00",
            "date_modified": "2020-10-17T00:00:00-04:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>nil}"
                
            
        }
    
    ]
}